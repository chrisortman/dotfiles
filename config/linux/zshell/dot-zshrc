is-macos() {
  [[ $OSTYPE == darwin* ]]
}

export EDITOR=vim
export HISTFILE=~/.zsh_history
export HISTSIZE=10000
export SAVEHIST=1000
setopt SHARE_HISTORY

# Ghostty shell integration for Zsh
export GHOSTTY_RESOURCES_DIR="/Applications/Ghostty.app/Contents/Resources/ghostty"
export GHOSTTY_SHELL_FEATURES="cursor,title"

if [ -n "${GHOSTTY_RESOURCES_DIR}" ]; then
    source "${GHOSTTY_RESOURCES_DIR}/shell-integration/zsh/ghostty-integration"
fi

source $HOME/.antidote/antidote.zsh

# initialize plugins statically with ~/.zsh_plugins.txt
antidote load

autoload -Uz promptinit && promptinit && prompt pure

# Want to ignore my mac home directory version of this file on linux
# assumes that you have the same user name
export MISE_IGNORED_CONFIG_PATHS="/Users/$USER/.config/mise/config.toml"

export REPORTTIME=60

eval "$(mise activate zsh)"

# zsh-vi-mode compatibility function for fzf
zvm_after_init() {
  if command -v fzf >/dev/null 2>&1; then
    eval "$(fzf --zsh)"
  fi
}

alias rc="bin/rails console"

# Function to report directory
__report_working_directory() {
    echo "orb" > /mnt/mac/tmp/last.txt
    echo $PWD > /mnt/mac/tmp/lastdir.txt
    printf '\e]7;file://%s%s\a' "$HOST" "$PWD"
}

# Add to precmd hook (runs before each prompt)
autoload -Uz add-zsh-hook
add-zsh-hook precmd __report_working_directory

# Override cd to report immediately
cd() {
    builtin cd "$@"
    __report_working_directory
}

foreground-vi() {
    fg %/usr/bin/vim || fg %nvim
}

zle -N foreground-vi

function edit-last () {
  local cmd
  setopt local_options extended_glob
  for cmd in $history; do
    case $cmd in
      ((ls|(cvs|git|hg|svn) status)(| *)) :;;
      ("rg "*) vim -q<(eval "$cmd --vimgrep"); return;;
      (edit-last) :;;
      (*) echo >&2 "The previous rg command is too old."; return 125;;
    esac
  done
}

